<?xml version='1.0'?>
<signatures version='1.0'>
<constant const='true' declared_type='NSString*' name='MBAlertDidAppearNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='MBAlertDidDismissNotification' type='@'/>
<constant declared_type='CGFloat' name='MBAlertViewDefaultHUDHideDelay' type='f' type64='d'/>
<constant declared_type='CGFloat' name='MBAlertViewMaxHUDDisplayTime' type='f' type64='d'/>
<constant const='true' declared_type='NSString*' name='NSFAttribute' type='@'/>
<constant const='true' declared_type='NSString*' name='NSFCalendarDate' type='@'/>
<constant const='true' declared_type='NSString*' name='NSFDatatype' type='@'/>
<constant const='true' declared_type='NSString*' name='NSFDomainKey' type='@'/>
<constant const='true' declared_type='NSString*' name='NSFKey' type='@'/>
<constant const='true' declared_type='NSString*' name='NSFKeyedArchive' type='@'/>
<constant const='true' declared_type='NSString*' name='NSFKeys' type='@'/>
<constant const='true' declared_type='NSString*' name='NSFMemoryDatabase' type='@'/>
<constant const='true' declared_type='NSString*' name='NSFNanoObjectBehaviorException' type='@'/>
<constant const='true' declared_type='NSInteger' name='NSFNanoStoreErrorKey' type='i' type64='q'/>
<constant const='true' declared_type='NSString*' name='NSFNanoStoreUnableToManipulateStoreException' type='@'/>
<constant const='true' declared_type='NSString*' name='NSFNonConformingNanoObjectProtocolException' type='@'/>
<constant const='true' declared_type='NSString*' name='NSFObjectClass' type='@'/>
<constant const='true' declared_type='NSString*' name='NSFP_ColumnIdentifier' type='@'/>
<constant const='true' declared_type='NSString*' name='NSFP_DatatypeIdentifier' type='@'/>
<constant const='true' declared_type='NSString*' name='NSFP_TableIdentifier' type='@'/>
<constant const='true' declared_type='NSString*' name='NSFRowIDColumnName' type='@'/>
<constant const='true' declared_type='NSString*' name='NSFTemporaryDatabase' type='@'/>
<constant const='true' declared_type='NSString*' name='NSFUnexpectedParameterException' type='@'/>
<constant const='true' declared_type='NSString*' name='NSFValue' type='@'/>
<constant const='true' declared_type='NSString*' name='NSFValues' type='@'/>
<constant const='true' declared_type='NSString*' name='NSFVersionKey' type='@'/>
<constant const='true' declared_type='NSInteger' name='NSF_Private_InvalidParameterDataCodeKey' type='i' type64='q'/>
<constant const='true' declared_type='NSInteger' name='NSF_Private_MacOSXErrorCodeKey' type='i' type64='q'/>
<constant const='true' declared_type='NSString*' name='NSF_Private_NSFKeys_NSFKey' type='@'/>
<constant const='true' declared_type='NSString*' name='NSF_Private_NSFKeys_NSFKeyedArchive' type='@'/>
<constant const='true' declared_type='NSString*' name='NSF_Private_NSFNanoBag_NSFKey' type='@'/>
<constant const='true' declared_type='NSString*' name='NSF_Private_NSFNanoBag_NSFObjectKeys' type='@'/>
<constant const='true' declared_type='NSString*' name='NSF_Private_NSFNanoBag_Name' type='@'/>
<constant const='true' declared_type='NSString*' name='NSF_Private_NSFValues_NSFAttribute' type='@'/>
<constant const='true' declared_type='NSString*' name='NSF_Private_NSFValues_NSFKey' type='@'/>
<constant const='true' declared_type='NSString*' name='NSF_Private_NSFValues_NSFValue' type='@'/>
<constant const='true' declared_type='NSString*' name='NSF_Private_ToDeleteTableKey' type='@'/>
<constant const='true' declared_type='NSString*' name='SDWebImageDownloadStartNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='SDWebImageDownloadStopNotification' type='@'/>
<enum name='CacheAllData' value='1'/>
<enum name='CacheDataOnDemand' value='2'/>
<enum name='DoNotCacheData' value='3'/>
<enum name='JournalModeDelete' value='0'/>
<enum name='JournalModeMemory' value='3'/>
<enum name='JournalModeOFF' value='5'/>
<enum name='JournalModePersist' value='2'/>
<enum name='JournalModeTruncate' value='1'/>
<enum name='JournalModeWAL' value='4'/>
<enum name='MBAlertViewHUDTypeActivityIndicator' value='1'/>
<enum name='MBAlertViewHUDTypeCheckmark' value='2'/>
<enum name='MBAlertViewHUDTypeDefault' value='0'/>
<enum name='MBAlertViewHUDTypeExclamationMark' value='3'/>
<enum name='MBAlertViewHUDTypeImage' value='5'/>
<enum name='MBAlertViewHUDTypeImagePositive' value='6'/>
<enum name='MBAlertViewHUDTypeLabelIcon' value='4'/>
<enum name='MBAlertViewItemTypeDefault' value='0'/>
<enum name='MBAlertViewItemTypeDestructive' value='1'/>
<enum name='MBAlertViewItemTypePositive' value='2'/>
<enum name='MBCheckmarkSizeLarge' value='3'/>
<enum name='MBCheckmarkSizeMedium' value='2'/>
<enum name='MBCheckmarkSizeSmall' value='1'/>
<enum name='MBCheckmarkSizeVerySmall' value='0'/>
<enum name='MBProgressHUDAnimationFade' value='0'/>
<enum name='MBProgressHUDAnimationZoom' value='1'/>
<enum name='MBProgressHUDAnimationZoomIn' value='2'/>
<enum name='MBProgressHUDAnimationZoomOut' value='1'/>
<enum name='MBProgressHUDModeAnnularDeterminate' value='3'/>
<enum name='MBProgressHUDModeCustomView' value='4'/>
<enum name='MBProgressHUDModeDeterminate' value='1'/>
<enum name='MBProgressHUDModeDeterminateHorizontalBar' value='2'/>
<enum name='MBProgressHUDModeIndeterminate' value='0'/>
<enum name='MBProgressHUDModeText' value='5'/>
<enum name='NSFAfterDate' value='3'/>
<enum name='NSFAnd' value='1'/>
<enum name='NSFAttributeColumn' value='2'/>
<enum name='NSFAverage' value='1'/>
<enum name='NSFBeforeDate' value='1'/>
<enum name='NSFBeginsWith' value='1'/>
<enum name='NSFContains' value='2'/>
<enum name='NSFCount' value='2'/>
<enum name='NSFEncodingUTF16' value='2'/>
<enum name='NSFEncodingUTF8' value='1'/>
<enum name='NSFEncodingUnknown' value='3'/>
<enum name='NSFEndsWith' value='3'/>
<enum name='NSFEngineProcessingDefaultMode' value='1'/>
<enum name='NSFEngineProcessingFastMode' value='2'/>
<enum name='NSFEqualTo' value='0'/>
<enum name='NSFGreaterThan' value='8'/>
<enum name='NSFInsensitiveBeginsWith' value='5'/>
<enum name='NSFInsensitiveContains' value='6'/>
<enum name='NSFInsensitiveEndsWith' value='7'/>
<enum name='NSFInsensitiveEqualTo' value='4'/>
<enum name='NSFKeyColumn' value='1'/>
<enum name='NSFLessThan' value='9'/>
<enum name='NSFMax' value='3'/>
<enum name='NSFMemoryStoreType' value='1'/>
<enum name='NSFMin' value='4'/>
<enum name='NSFNanoTypeData' value='1'/>
<enum name='NSFNanoTypeDate' value='3'/>
<enum name='NSFNanoTypeNULL' value='5'/>
<enum name='NSFNanoTypeNumber' value='4'/>
<enum name='NSFNanoTypeRowUID' value='0'/>
<enum name='NSFNanoTypeString' value='2'/>
<enum name='NSFNanoTypeURL' value='6'/>
<enum name='NSFNanoTypeUnknown' value='-1'/>
<enum name='NSFNotEqualTo' value='10'/>
<enum name='NSFOnDate' value='2'/>
<enum name='NSFOr' value='2'/>
<enum name='NSFPersistentStoreType' value='3'/>
<enum name='NSFReturnKeys' value='2'/>
<enum name='NSFReturnObjects' value='1'/>
<enum name='NSFTemporaryStoreType' value='2'/>
<enum name='NSFTotal' value='5'/>
<enum name='NSFValueColumn' value='3'/>
<enum name='NSSpinningCircleSizeDefault' value='0'/>
<enum name='NSSpinningCircleSizeLarge' value='1'/>
<enum name='NSSpinningCircleSizeSmall' value='2'/>
<enum name='SDImageCacheTypeDisk' value='1'/>
<enum name='SDImageCacheTypeMemory' value='2'/>
<enum name='SDImageCacheTypeNone' value='0'/>
<enum name='SDWebImageAllowInvalidSSLCertificates' value='128'/>
<enum name='SDWebImageCacheMemoryOnly' value='4'/>
<enum name='SDWebImageContinueInBackground' value='32'/>
<enum name='SDWebImageDownloaderAllowInvalidSSLCertificates' value='64'/>
<enum name='SDWebImageDownloaderContinueInBackground' value='16'/>
<enum name='SDWebImageDownloaderFIFOExecutionOrder' value='0'/>
<enum name='SDWebImageDownloaderHandleCookies' value='32'/>
<enum name='SDWebImageDownloaderIgnoreCachedResponse' value='8'/>
<enum name='SDWebImageDownloaderLIFOExecutionOrder' value='1'/>
<enum name='SDWebImageDownloaderLowPriority' value='1'/>
<enum name='SDWebImageDownloaderProgressiveDownload' value='2'/>
<enum name='SDWebImageDownloaderUseNSURLCache' value='4'/>
<enum name='SDWebImageHandleCookies' value='64'/>
<enum name='SDWebImageLowPriority' value='2'/>
<enum name='SDWebImageProgressiveDownload' value='8'/>
<enum name='SDWebImageRefreshCached' value='16'/>
<enum name='SDWebImageRetryFailed' value='1'/>
<enum name='SVInfiniteScrollingStateAll' value='10'/>
<enum name='SVInfiniteScrollingStateLoading' value='2'/>
<enum name='SVInfiniteScrollingStateStopped' value='0'/>
<enum name='SVInfiniteScrollingStateTriggered' value='1'/>
<enum name='SVPullToRefreshStateAll' value='10'/>
<enum name='SVPullToRefreshStateLoading' value='2'/>
<enum name='SVPullToRefreshStateStopped' value='0'/>
<enum name='SVPullToRefreshStateTriggered' value='1'/>
<enum name='SynchronousModeFull' value='2'/>
<enum name='SynchronousModeNormal' value='1'/>
<enum name='SynchronousModeOff' value='0'/>
<enum name='TempStoreModeDefault' value='0'/>
<enum name='TempStoreModeFile' value='1'/>
<enum name='TempStoreModeMemory' value='2'/>
<function name='NSFIsDebugOn'>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='NSFNanoDatatypeFromString'>
<arg declared_type='NSString*' name='aNanoDatatype' type='@'/>
<retval declared_type='NSFNanoDatatype' type='i'/>
</function>
<function name='NSFSetIsDebugOn'>
<arg declared_type='BOOL' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSFStringFromMatchType'>
<arg declared_type='NSFMatchType' name='aMatchType' type='i'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='NSFStringFromNanoDataType'>
<arg declared_type='NSFNanoDatatype' name='aNanoDatatype' type='i'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='REDeviceIsUIKit7'>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='REUIKitIsFlatMode'>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='SDScaledImageForKey'>
<arg declared_type='NSString*' name='key' type='@'/>
<arg declared_type='UIImage*' name='image' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</function>
<function name='safeJSONArrayFromArray'>
<arg declared_type='NSArray*' name='array' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</function>
<function name='safeJSONDictionaryFromDictionary'>
<arg declared_type='NSDictionary*' name='dictionary' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</function>
<function name='safeJSONObjectFromObject'>
<arg declared_type='id' name='object' type='@'/>
<retval declared_type='id' type='@'/>
</function>
<class name='MBAlertAbstract'>
<method selector='addToDisplayQueue'>
<retval declared_type='void' type='v'/>
</method>
<method selector='addToWindow'>
<retval declared_type='void' type='v'/>
</method>
<method selector='addsToWindow'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='alertIsVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dismiss'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='dismissCurrentHUD'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='dismissCurrentHUDAfterDelay:'>
<arg declared_type='float' index='0' name='delay' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hideTimer'>
<retval declared_type='NSTimer*' type='@'/>
</method>
<method selector='performLayout'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAddsToWindow:'>
<arg declared_type='BOOL' index='0' name='addsToWindow' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHideTimer:'>
<arg declared_type='NSTimer*' index='0' name='hideTimer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldPerformBlockAfterDismissal:'>
<arg declared_type='BOOL' index='0' name='shouldPerformBlockAfterDismissal' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUponDismissalBlock:'>
<arg declared_type='id' index='0' name='uponDismissalBlock' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldPerformBlockAfterDismissal'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='uponDismissalBlock'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='MBAlertView'>
<method selector='addButtonWithText:type:block:'>
<arg declared_type='NSString*' index='0' name='text' type='@'/>
<arg declared_type='MBAlertViewItemType' index='1' name='type' type='i'/>
<arg declared_type='void (^)()' function_pointer='true' index='2' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='alertWithBody:cancelTitle:cancelBlock:'>
<arg declared_type='NSString*' index='0' name='body' type='@'/>
<arg declared_type='NSString*' index='1' name='cancelTitle' type='@'/>
<arg declared_type='void (^)()' function_pointer='true' index='2' name='cancelBlock' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='MBAlertView*' type='@'/>
</method>
<method selector='backgroundAlpha'>
<retval declared_type='float' type='f'/>
</method>
<method selector='bodyFont'>
<retval declared_type='UIFont*' type='@'/>
</method>
<method selector='bodyLabelButton'>
<retval declared_type='UIButton*' type='@'/>
</method>
<method selector='bodyText'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='contentRect'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method class_method='true' selector='halfScreenSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='iconOffset'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='imageView'>
<retval declared_type='UIImageView*' type='@'/>
</method>
<method selector='setBackgroundAlpha:'>
<arg declared_type='float' index='0' name='backgroundAlpha' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBodyFont:'>
<arg declared_type='UIFont*' index='0' name='bodyFont' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBodyLabelButton:'>
<arg declared_type='UIButton*' index='0' name='bodyLabelButton' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBodyText:'>
<arg declared_type='NSString*' index='0' name='bodyText' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentRect:'>
<arg declared_type='CGRect' index='0' name='contentRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIconOffset:'>
<arg declared_type='CGSize' index='0' name='iconOffset' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageView:'>
<arg declared_type='UIImageView*' index='0' name='imageView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSize:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='size'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
</class>
<class name='MBAlertViewButton'>
<method selector='alertButtonType'>
<retval declared_type='MBAlertViewItemType' type='i'/>
</method>
<method selector='initWithTitle:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAlertButtonType:'>
<arg declared_type='MBAlertViewItemType' index='0' name='alertButtonType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='title'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='MBAlertViewItem'>
<method selector='block'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTitle:type:block:'>
<arg declared_type='NSString*' index='0' name='text' type='@'/>
<arg declared_type='MBAlertViewItemType' index='1' name='type' type='i'/>
<arg declared_type='void (^)()' function_pointer='true' index='2' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='setBlock:'>
<arg declared_type='id' index='0' name='block' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setType:'>
<arg declared_type='MBAlertViewItemType' index='0' name='type' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='title'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='type'>
<retval declared_type='MBAlertViewItemType' type='i'/>
</method>
</class>
<class name='MBBarProgressView'>
<method selector='lineColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='progress'>
<retval declared_type='float' type='f'/>
</method>
<method selector='progressColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='progressRemainingColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='setLineColor:'>
<arg declared_type='UIColor*' index='0' name='lineColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgress:'>
<arg declared_type='float' index='0' name='progress' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgressColor:'>
<arg declared_type='UIColor*' index='0' name='progressColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgressRemainingColor:'>
<arg declared_type='UIColor*' index='0' name='progressRemainingColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MBCheckMarkView'>
<method class_method='true' selector='checkMarkWithSize:color:'>
<arg declared_type='MBCheckmarkSize' index='0' name='size' type='i'/>
<arg declared_type='UIColor*' index='1' name='color' type='@'/>
<retval declared_type='MBCheckMarkView*' type='@'/>
</method>
<method selector='color'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='setColor:'>
<arg declared_type='UIColor*' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSize:'>
<arg declared_type='MBCheckmarkSize' index='0' name='size' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='size'>
<retval declared_type='MBCheckmarkSize' type='i'/>
</method>
</class>
<class name='MBHUDView'>
<method selector='backgroundColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='bodyOffset'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='hudHideDelay'>
<retval declared_type='float' type='f'/>
</method>
<method selector='hudType'>
<retval declared_type='MBAlertViewHUDType' type='i'/>
</method>
<method class_method='true' selector='hudWithBody:type:hidesAfter:show:'>
<arg declared_type='NSString*' index='0' name='body' type='@'/>
<arg declared_type='MBAlertViewHUDType' index='1' name='type' type='i'/>
<arg declared_type='float' index='2' name='delay' type='f'/>
<arg declared_type='BOOL' index='3' name='show' type='B'/>
<retval declared_type='MBHUDView*' type='@'/>
</method>
<method selector='iconLabel'>
<retval declared_type='UILabel*' type='@'/>
</method>
<method selector='itemColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='UIColor*' index='0' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBodyOffset:'>
<arg declared_type='CGSize' index='0' name='bodyOffset' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHudHideDelay:'>
<arg declared_type='float' index='0' name='hudHideDelay' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHudType:'>
<arg declared_type='MBAlertViewHUDType' index='0' name='hudType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIconLabel:'>
<arg declared_type='UILabel*' index='0' name='iconLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItemColor:'>
<arg declared_type='UIColor*' index='0' name='itemColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MBProgressHUD'>
<method class_method='true' selector='HUDForView:'>
<arg declared_type='UIView*' index='0' name='view' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='allHUDsForView:'>
<arg declared_type='UIView*' index='0' name='view' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='animationType'>
<retval declared_type='MBProgressHUDAnimation' type='i'/>
</method>
<method selector='color'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='completionBlock'>
<retval declared_type='MBProgressHUDCompletionBlock' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='customView'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='detailsLabelFont'>
<retval declared_type='UIFont*' type='@'/>
</method>
<method selector='detailsLabelText'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dimBackground'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='graceTime'>
<retval declared_type='float' type='f'/>
</method>
<method selector='hide:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hide:afterDelay:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<arg declared_type='NSTimeInterval' index='1' name='delay' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='hideAllHUDsForView:animated:'>
<arg declared_type='UIView*' index='0' name='view' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method class_method='true' selector='hideHUDForView:animated:'>
<arg declared_type='UIView*' index='0' name='view' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithView:'>
<arg declared_type='UIView*' index='0' name='view' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithWindow:'>
<arg declared_type='UIWindow*' index='0' name='window' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isSquare'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='labelFont'>
<retval declared_type='UIFont*' type='@'/>
</method>
<method selector='labelText'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='margin'>
<retval declared_type='float' type='f'/>
</method>
<method selector='minShowTime'>
<retval declared_type='float' type='f'/>
</method>
<method selector='minSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='mode'>
<retval declared_type='MBProgressHUDMode' type='i'/>
</method>
<method selector='opacity'>
<retval declared_type='float' type='f'/>
</method>
<method selector='progress'>
<retval declared_type='float' type='f'/>
</method>
<method selector='removeFromSuperViewOnHide'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAnimationType:'>
<arg declared_type='MBProgressHUDAnimation' index='0' name='animationType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg declared_type='UIColor*' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompletionBlock:'>
<arg declared_type='MBProgressHUDCompletionBlock' function_pointer='true' index='0' name='completionBlock' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCustomView:'>
<arg declared_type='UIView*' index='0' name='customView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDetailsLabelFont:'>
<arg declared_type='UIFont*' index='0' name='detailsLabelFont' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDetailsLabelText:'>
<arg declared_type='NSString*' index='0' name='detailsLabelText' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDimBackground:'>
<arg declared_type='BOOL' index='0' name='dimBackground' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGraceTime:'>
<arg declared_type='float' index='0' name='graceTime' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabelFont:'>
<arg declared_type='UIFont*' index='0' name='labelFont' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabelText:'>
<arg declared_type='NSString*' index='0' name='labelText' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMargin:'>
<arg declared_type='float' index='0' name='margin' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinShowTime:'>
<arg declared_type='float' index='0' name='minShowTime' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinSize:'>
<arg declared_type='CGSize' index='0' name='minSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMode:'>
<arg declared_type='MBProgressHUDMode' index='0' name='mode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:'>
<arg declared_type='float' index='0' name='opacity' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgress:'>
<arg declared_type='float' index='0' name='progress' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRemoveFromSuperViewOnHide:'>
<arg declared_type='BOOL' index='0' name='removeFromSuperViewOnHide' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSquare:'>
<arg declared_type='BOOL' index='0' name='square' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTaskInProgress:'>
<arg declared_type='BOOL' index='0' name='taskInProgress' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setXOffset:'>
<arg declared_type='float' index='0' name='xOffset' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setYOffset:'>
<arg declared_type='float' index='0' name='yOffset' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='show:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showAnimated:whileExecutingBlock:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<arg declared_type='dispatch_block_t' function_pointer='true' index='1' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='showAnimated:whileExecutingBlock:completionBlock:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<arg declared_type='dispatch_block_t' function_pointer='true' index='1' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='MBProgressHUDCompletionBlock' function_pointer='true' index='2' name='completion' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='showAnimated:whileExecutingBlock:onQueue:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<arg declared_type='dispatch_block_t' function_pointer='true' index='1' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='dispatch_queue_t' index='2' name='queue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showAnimated:whileExecutingBlock:onQueue:completionBlock:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<arg declared_type='dispatch_block_t' function_pointer='true' index='1' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='dispatch_queue_t' index='2' name='queue' type='@'/>
<arg declared_type='MBProgressHUDCompletionBlock' function_pointer='true' index='3' name='completion' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showHUDAddedTo:animated:'>
<arg declared_type='UIView*' index='0' name='view' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='showWhileExecuting:onTarget:withObject:animated:'>
<arg declared_type='SEL' index='0' name='method' type=':'/>
<arg declared_type='id' index='1' name='target' type='@'/>
<arg declared_type='id' index='2' name='object' type='@'/>
<arg declared_type='BOOL' index='3' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='taskInProgress'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='xOffset'>
<retval declared_type='float' type='f'/>
</method>
<method selector='yOffset'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='MBRoundProgressView'>
<method selector='backgroundTintColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='isAnnular'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='progress'>
<retval declared_type='float' type='f'/>
</method>
<method selector='progressTintColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='setAnnular:'>
<arg declared_type='BOOL' index='0' name='annular' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundTintColor:'>
<arg declared_type='UIColor*' index='0' name='backgroundTintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgress:'>
<arg declared_type='float' index='0' name='progress' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgressTintColor:'>
<arg declared_type='UIColor*' index='0' name='progressTintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MBSpinningCircle'>
<method selector='circleSize'>
<retval declared_type='NSSpinningCircleSize' type='i'/>
</method>
<method class_method='true' selector='circleWithSize:color:'>
<arg declared_type='NSSpinningCircleSize' index='0' name='size' type='i'/>
<arg declared_type='UIColor*' index='1' name='color' type='@'/>
<retval declared_type='MBSpinningCircle*' type='@'/>
</method>
<method selector='color'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='hasGlow'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAnimating'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setCircleSize:'>
<arg declared_type='NSSpinningCircleSize' index='0' name='circleSize' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg declared_type='UIColor*' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHasGlow:'>
<arg declared_type='BOOL' index='0' name='hasGlow' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsAnimating:'>
<arg declared_type='BOOL' index='0' name='isAnimating' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpeed:'>
<arg declared_type='float' index='0' name='speed' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speed'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='NSData'>
<method selector='sd_isGIF'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSFNanoBag'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_inflateObjectsWithKeys:'>
<arg declared_type='NSArray*' index='0' name='someKeys' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_saveInStore:error:'>
<arg declared_type='NSFNanoStore*' index='0' name='someStore' type='@'/>
<arg declared_type='NSError**' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_setStore:'>
<arg declared_type='NSFNanoStore*' index='0' name='aStore' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addObject:error:'>
<arg declared_type='id' index='0' name='theObject' type='@'/>
<arg declared_type='NSError**' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='addObjectsFromArray:error:'>
<arg declared_type='NSArray*' index='0' name='theObjects' type='@'/>
<arg declared_type='NSError**' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='bag'>
<retval declared_type='NSFNanoBag*' type='@'/>
</method>
<method class_method='true' selector='bagWithName:'>
<arg declared_type='NSString*' index='0' name='theName' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='bagWithName:andObjects:'>
<arg declared_type='NSString*' index='0' name='theName' type='@'/>
<arg declared_type='NSArray*' index='1' name='theObjects' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='bagWithObjects:'>
<arg declared_type='NSArray*' index='0' name='theObjects' type='@'/>
<retval declared_type='NSFNanoBag*' type='@'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='deflateBag'>
<retval declared_type='void' type='v'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dictionaryRepresentation'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='hasUnsavedChanges'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='inflateBag'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initBagWithName:andObjects:'>
<arg declared_type='NSString*' index='0' name='theName' type='@'/>
<arg declared_type='NSArray*' index='1' name='someObjects' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEqualToNanoBag:'>
<arg declared_type='NSFNanoBag*' index='0' name='otherNanoBag' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='key'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='reloadBagWithError:'>
<arg declared_type='NSError**' index='0' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeAllObjects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObject:'>
<arg declared_type='id' index='0' name='theObject' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectWithKey:'>
<arg declared_type='NSString*' index='0' name='theObjectKey' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectsInArray:'>
<arg declared_type='NSArray*' index='0' name='theObjects' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectsWithKeysInArray:'>
<arg declared_type='NSArray*' index='0' name='theKeys' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removedObjects'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='saveAndReturnError:'>
<arg declared_type='NSError**' index='0' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='savedObjects'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='setName:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStore:'>
<arg declared_type='NSFNanoStore*' index='0' name='store' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='store'>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
<method selector='undoChangesWithError:'>
<arg declared_type='NSError**' index='0' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='unsavedObjects'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='NSFNanoEngine'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='NSFEncodingTypeToNSString:'>
<arg declared_type='NSFEncodingType' index='0' name='value' type='i'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='NSFP_ROWIDPresenceLocation:datatypes:'>
<arg declared_type='NSArray*' index='0' name='tableColumns' type='@'/>
<arg declared_type='NSArray*' index='1' name='datatypes' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='NSFP_beginTransactionMode:'>
<arg declared_type='NSString*' index='0' name='theSQLStatement' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='NSFP_cacheMethodToString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='NSFP_createTable:withColumns:datatypes:isTemporary:'>
<arg declared_type='NSString*' index='0' name='table' type='@'/>
<arg declared_type='NSArray*' index='1' name='tableColumns' type='@'/>
<arg declared_type='NSArray*' index='2' name='tableDatatypes' type='@'/>
<arg declared_type='BOOL' index='3' name='isTemporaryFlag' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='NSFP_decodeQuantum:andSource:'>
<arg declared_type='unsigned char*' index='0' name='dest' type='*'/>
<arg const='true' declared_type='char*' index='1' name='src' type='*'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='NSFP_flattenAllTables'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='NSFP_insertStringValues:forColumns:table:'>
<arg declared_type='NSArray*' index='0' name='values' type='@'/>
<arg declared_type='NSArray*' index='1' name='columns' type='@'/>
<arg declared_type='NSString*' index='2' name='table' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='NSFP_installCommitCallback'>
<retval declared_type='void' type='v'/>
</method>
<method selector='NSFP_nestedDescriptionWithPrefixedSpace:'>
<arg declared_type='NSString*' index='0' name='prefixedSpace' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='NSFP_prefixWithDotDelimiter:'>
<arg declared_type='NSString*' index='0' name='tableAndColumn' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='NSFP_prepareSQLite3Statement:theSQLStatement:'>
<arg declared_type='sqlite3_stmt**' index='0' name='aStatement' type='^^{sqlite3_stmt}'/>
<arg declared_type='NSString*' index='1' name='aSQLQuery' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='NSFP_rebuildDatatypeCache'>
<retval declared_type='void' type='v'/>
</method>
<method selector='NSFP_removeColumn:fromTable:'>
<arg declared_type='NSString*' index='0' name='column' type='@'/>
<arg declared_type='NSString*' index='1' name='table' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='NSFP_sharedROWIDKeywords'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='NSFP_sqlString:appendingTags:'>
<arg declared_type='NSMutableString*' index='0' name='theSQLStatement' type='@'/>
<arg declared_type='NSArray*' index='1' name='columns' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='NSFP_sqlString:appendingTags:quoteTags:'>
<arg declared_type='NSMutableString*' index='0' name='theSQLStatement' type='@'/>
<arg declared_type='NSArray*' index='1' name='tags' type='@'/>
<arg declared_type='BOOL' index='2' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='NSFP_sqlString:forTable:withColumns:datatypes:'>
<arg declared_type='NSMutableString*' index='0' name='theSQLStatement' type='@'/>
<arg declared_type='NSString*' index='1' name='table' type='@'/>
<arg declared_type='NSArray*' index='2' name='columns' type='@'/>
<arg declared_type='NSArray*' index='3' name='datatypes' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='NSFP_stripBitsFromExtendedResultCode:'>
<arg declared_type='int' index='0' name='extendedResult' type='i'/>
<retval declared_type='int' type='i'/>
</method>
<method selector='NSFP_suffixWithDotDelimiter:'>
<arg declared_type='NSString*' index='0' name='tableAndColumn' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='NSFP_uninstallCommitCallback'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='NSStringToNSFEncodingType:'>
<arg declared_type='NSString*' index='0' name='value' type='@'/>
<retval declared_type='NSFEncodingType' type='i'/>
</method>
<method class_method='true' selector='_plistToDictionary:'>
<arg declared_type='NSString*' index='0' name='aPlist' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='allTables'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='beginDeferredTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='beginTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='busyTimeout'>
<retval declared_type='unsigned int' type='I'/>
</method>
<method selector='cacheMethod'>
<retval declared_type='NSFCacheMethod' type='i'/>
</method>
<method selector='cacheSize'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='close'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='columnsForTable:'>
<arg declared_type='NSString*' index='0' name='theTable' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='commitTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='compact'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='createIndexForColumn:table:isUnique:'>
<arg declared_type='NSString*' index='0' name='theColumn' type='@'/>
<arg declared_type='NSString*' index='1' name='theTable' type='@'/>
<arg declared_type='BOOL' index='2' name='isUnique' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='createTable:withColumns:datatypes:'>
<arg declared_type='NSString*' index='0' name='theTable' type='@'/>
<arg declared_type='NSArray*' index='1' name='theColumns' type='@'/>
<arg declared_type='NSArray*' index='2' name='theDatatypes' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='databaseWithPath:'>
<arg declared_type='NSString*' index='0' name='thePath' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='datatypesForTable:'>
<arg declared_type='NSString*' index='0' name='theTable' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='decodeDataFromBase64:'>
<arg declared_type='NSString*' index='0' name='theEncodedData' type='@'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dictionaryDescription'>
<retval declared_type='NSFOrderedDictionary*' type='@'/>
</method>
<method selector='dropIndex:'>
<arg declared_type='NSString*' index='0' name='theIndex' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dropTable:'>
<arg declared_type='NSString*' index='0' name='theTable' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='encodeDataToBase64:'>
<arg declared_type='NSData*' index='0' name='theData' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='encoding'>
<retval declared_type='NSFEncodingType' type='i'/>
</method>
<method selector='executeSQL:'>
<arg declared_type='NSString*' index='0' name='theSQLStatement' type='@'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method selector='indexedColumnsForTable:'>
<arg declared_type='NSString*' index='0' name='theTable' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='indexes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='initWithPath:'>
<arg declared_type='NSString*' index='0' name='thePath' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='integrityCheck'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isDatabaseOpen'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isTransactionActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='journalModeAndReturnError:'>
<arg declared_type='NSError**' index='0' name='outError' type='^@'/>
<retval declared_type='NSFJournalModeMode' type='i'/>
</method>
<method selector='maxRowUIDForTable:'>
<arg declared_type='NSString*' index='0' name='theTable' type='@'/>
<retval declared_type='long long' type='q'/>
</method>
<method class_method='true' selector='nanoStoreEngineVersion'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='openWithCacheMethod:useFastMode:'>
<arg declared_type='NSFCacheMethod' index='0' name='theCacheMethod' type='i'/>
<arg declared_type='BOOL' index='1' name='useFastMode' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pageSize'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='path'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='recommendedCacheSize'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='rollbackTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setBusyTimeout:'>
<arg declared_type='unsigned int' index='0' name='theTimeout' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCacheMethod:'>
<arg declared_type='NSFCacheMethod' index='0' name='cacheMethod' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCacheSize:'>
<arg declared_type='NSUInteger' index='0' name='numberOfPages' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setEncodingType:'>
<arg declared_type='NSFEncodingType' index='0' name='theEncodingType' type='i'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setJournalMode:'>
<arg declared_type='NSFJournalModeMode' index='0' name='theMode' type='i'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setPageSize:'>
<arg declared_type='NSUInteger' index='0' name='numberOfBytes' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setSynchronousMode:'>
<arg declared_type='NSFSynchronousMode' index='0' name='theSynchronousMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTempStoreMode:'>
<arg declared_type='NSFTempStoreMode' index='0' name='theTempStoreMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedNanoStoreEngineDatatypes'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='sqlite'>
<retval declared_type='sqlite3*' type='^{sqlite3=}'/>
</method>
<method class_method='true' selector='sqliteVersion'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='stringWithUUID'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='synchronousMode'>
<retval declared_type='NSFSynchronousMode' type='i'/>
</method>
<method class_method='true' selector='systemPageSize'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='tables'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='tempStoreMode'>
<retval declared_type='NSFTempStoreMode' type='i'/>
</method>
<method selector='temporaryTables'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='NSFNanoExpression'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='addPredicate:withOperator:'>
<arg declared_type='NSFNanoPredicate*' index='0' name='thePredicate' type='@'/>
<arg declared_type='NSFOperator' index='1' name='theOperator' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='arrayDescription'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='expressionWithPredicate:'>
<arg declared_type='NSFNanoPredicate*' index='0' name='thePredicate' type='@'/>
<retval declared_type='NSFNanoExpression*' type='@'/>
</method>
<method selector='initWithPredicate:'>
<arg declared_type='NSFNanoPredicate*' index='0' name='thePredicate' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='operators'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='predicates'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='NSFNanoObject'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='_NSObjectToJSONString:error:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<arg declared_type='NSError**' index='1' name='error' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='_safeArrayFromArray:'>
<arg declared_type='NSArray*' index='0' name='array' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='_safeDictionaryFromDictionary:'>
<arg declared_type='NSDictionary*' index='0' name='dictionary' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method class_method='true' selector='_safeObjectFromObject:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_setOriginalClassString:'>
<arg declared_type='NSString*' index='0' name='theClassString' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addEntriesFromDictionary:'>
<arg declared_type='NSDictionary*' index='0' name='otherDictionary' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dictionaryRepresentation'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='info'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='initFromDictionaryRepresentation:'>
<arg declared_type='NSDictionary*' index='0' name='theDictionary' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initFromDictionaryRepresentation:key:'>
<arg declared_type='NSDictionary*' index='0' name='theDictionary' type='@'/>
<arg declared_type='NSString*' index='1' name='theKey' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEqualToNanoObject:'>
<arg declared_type='NSFNanoObject*' index='0' name='otherNanoObject' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='key'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='nanoObject'>
<retval declared_type='NSFNanoObject*' type='@'/>
</method>
<method class_method='true' selector='nanoObjectWithDictionary:'>
<arg declared_type='NSDictionary*' index='0' name='theDictionary' type='@'/>
<retval declared_type='NSFNanoObject*' type='@'/>
</method>
<method class_method='true' selector='nanoObjectWithDictionary:key:'>
<arg declared_type='NSDictionary*' index='0' name='theDictionary' type='@'/>
<arg declared_type='NSString*' index='1' name='theKey' type='@'/>
<retval declared_type='NSFNanoObject*' type='@'/>
</method>
<method selector='objectForKey:'>
<arg declared_type='NSString*' index='0' name='aKey' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='originalClassString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='removeAllObjects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectForKey:'>
<arg declared_type='NSString*' index='0' name='aKey' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectsForKeys:'>
<arg declared_type='NSArray*' index='0' name='keyArray' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='saveStoreAndReturnError:'>
<arg declared_type='NSError**' index='0' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setObject:forKey:'>
<arg declared_type='id' index='0' name='anObject' type='@'/>
<arg declared_type='NSString*' index='1' name='aKey' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStore:'>
<arg declared_type='NSFNanoStore*' index='0' name='store' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='store'>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
</class>
<class name='NSFNanoPredicate'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='column'>
<retval declared_type='NSFTableColumnType' type='i'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithColumn:matching:value:'>
<arg declared_type='NSFTableColumnType' index='0' name='theType' type='i'/>
<arg declared_type='NSFMatchType' index='1' name='theMatch' type='i'/>
<arg declared_type='id' index='2' name='theValue' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='match'>
<retval declared_type='NSFMatchType' type='i'/>
</method>
<method class_method='true' selector='predicateWithColumn:matching:value:'>
<arg declared_type='NSFTableColumnType' index='0' name='theType' type='i'/>
<arg declared_type='NSFMatchType' index='1' name='theMatch' type='i'/>
<arg declared_type='id' index='2' name='theValue' type='@'/>
<retval declared_type='NSFNanoPredicate*' type='@'/>
</method>
<method selector='value'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSFNanoResult'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_calculateNumberOfRows'>
<retval declared_type='void' type='v'/>
</method>
<method selector='_initWithDictionary:'>
<arg declared_type='NSDictionary*' index='0' name='results' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_initWithError:'>
<arg declared_type='NSError*' index='0' name='error' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_reset'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='_resultWithDictionary:'>
<arg declared_type='NSDictionary*' index='0' name='results' type='@'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method class_method='true' selector='_resultWithError:'>
<arg declared_type='NSError*' index='0' name='error' type='@'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method selector='_setError:'>
<arg declared_type='NSError*' index='0' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='columns'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='firstValue'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='numberOfRows'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='setError:'>
<arg declared_type='NSError*' index='0' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='valueAtIndex:forColumn:'>
<arg declared_type='NSUInteger' index='0' name='theIndex' type='I' type64='Q'/>
<arg declared_type='NSString*' index='1' name='theColumn' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='valuesForColumn:'>
<arg declared_type='NSString*' index='0' name='theColumn' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='writeToFile:'>
<arg declared_type='NSString*' index='0' name='thePath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSFNanoSearch'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_dataWithKey:attribute:value:matching:'>
<arg declared_type='NSString*' index='0' name='aKey' type='@'/>
<arg declared_type='NSString*' index='1' name='anAttribute' type='@'/>
<arg declared_type='NSString*' index='2' name='aValue' type='@'/>
<arg declared_type='NSFMatchType' index='3' name='match' type='i'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='_dataWithKey:attribute:value:matching:returning:'>
<arg declared_type='NSString*' index='0' name='aKey' type='@'/>
<arg declared_type='NSString*' index='1' name='anAttribute' type='@'/>
<arg declared_type='NSString*' index='2' name='aValue' type='@'/>
<arg declared_type='NSFMatchType' index='3' name='match' type='i'/>
<arg declared_type='NSFReturnType' index='4' name='returnedObjectType' type='i'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='_dictionaryForKeyPath:value:'>
<arg declared_type='NSString*' index='0' name='keyPath' type='@'/>
<arg declared_type='id' index='1' name='value' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='_prepareSQLQueryStringWithExpressions:'>
<arg declared_type='NSArray*' index='0' name='someExpressions' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_prepareSQLQueryStringWithKey:attribute:value:matching:'>
<arg declared_type='NSString*' index='0' name='aKey' type='@'/>
<arg declared_type='NSString*' index='1' name='anAttribute' type='@'/>
<arg declared_type='id' index='2' name='aValue' type='@'/>
<arg declared_type='NSFMatchType' index='3' name='match' type='i'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='_prepareSQLQueryStringWithKeys:'>
<arg declared_type='NSArray*' index='0' name='someKeys' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_preparedSQL'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='_querySegmentForAttributeColumnWithValue:matching:valueColumnWithValue:'>
<arg declared_type='id' index='0' name='anAttributeValue' type='@'/>
<arg declared_type='NSFMatchType' index='1' name='match' type='i'/>
<arg declared_type='id' index='2' name='aValue' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='_querySegmentForColumn:value:matching:'>
<arg declared_type='NSString*' index='0' name='aColumn' type='@'/>
<arg declared_type='id' index='1' name='aValue' type='@'/>
<arg declared_type='NSFMatchType' index='2' name='match' type='i'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='_quoteStrings:joiningWithDelimiter:'>
<arg declared_type='NSArray*' index='0' name='strings' type='@'/>
<arg declared_type='NSString*' index='1' name='delimiter' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_resultsFromSQLQuery:'>
<arg declared_type='NSString*' index='0' name='theSQLStatement' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='_retrieveDataAdded:calendarDate:error:'>
<arg declared_type='NSFDateMatchType' index='0' name='aDateMatch' type='i'/>
<arg declared_type='NSDate*' index='1' name='aDate' type='@'/>
<arg declared_type='NSError**' index='2' name='outError' type='^@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='_retrieveDataWithError:'>
<arg declared_type='NSError**' index='0' name='outError' type='^@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='_sortResultsIfApplicable:returnType:'>
<arg declared_type='NSDictionary*' index='0' name='results' type='@'/>
<arg declared_type='NSFReturnType' index='1' name='theReturnType' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='aggregateOperation:onAttribute:'>
<arg declared_type='NSFAggregateFunctionType' index='0' name='theFunctionType' type='i'/>
<arg declared_type='NSString*' index='1' name='theAttribute' type='@'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method selector='attribute'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='attributesToBeReturned'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='bag'>
<retval declared_type='NSFNanoBag*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='executeSQL:'>
<arg declared_type='NSString*' index='0' name='theSQLStatement' type='@'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method selector='executeSQL:returnType:error:'>
<arg declared_type='NSString*' index='0' name='theSQLStatement' type='@'/>
<arg declared_type='NSFReturnType' index='1' name='theReturnType' type='i'/>
<arg declared_type='NSError**' index='2' name='outError' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='explainSQL:'>
<arg declared_type='NSString*' index='0' name='theSQLStatement' type='@'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method selector='expressions'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='filterClass'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='groupValues'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithStore:'>
<arg declared_type='NSFNanoStore*' index='0' name='theNanoStore' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='key'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='limit'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='match'>
<retval declared_type='NSFMatchType' type='i'/>
</method>
<method selector='nanoStore'>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
<method selector='offset'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchObjectsAdded:date:returnType:error:'>
<arg declared_type='NSFDateMatchType' index='0' name='theDateMatch' type='i'/>
<arg declared_type='NSDate*' index='1' name='theDate' type='@'/>
<arg declared_type='NSFReturnType' index='2' name='theReturnType' type='i'/>
<arg declared_type='NSError**' index='3' name='outError' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='searchObjectsWithReturnType:error:'>
<arg declared_type='NSFReturnType' index='0' name='theReturnType' type='i'/>
<arg declared_type='NSError**' index='1' name='outError' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='searchWithStore:'>
<arg declared_type='NSFNanoStore*' index='0' name='theNanoStore' type='@'/>
<retval declared_type='NSFNanoSearch*' type='@'/>
</method>
<method selector='setAttribute:'>
<arg declared_type='NSString*' index='0' name='attribute' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributesToBeReturned:'>
<arg declared_type='NSArray*' index='0' name='attributesToBeReturned' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBag:'>
<arg declared_type='NSFNanoBag*' index='0' name='bag' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExpressions:'>
<arg declared_type='NSArray*' index='0' name='expressions' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFilterClass:'>
<arg declared_type='NSString*' index='0' name='filterClass' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGroupValues:'>
<arg declared_type='BOOL' index='0' name='groupValues' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLimit:'>
<arg declared_type='NSUInteger' index='0' name='limit' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMatch:'>
<arg declared_type='NSFMatchType' index='0' name='match' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNanoStore:'>
<arg declared_type='NSFNanoStore*' index='0' name='nanoStore' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOffset:'>
<arg declared_type='NSUInteger' index='0' name='offset' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSort:'>
<arg declared_type='NSArray*' index='0' name='sort' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:'>
<arg declared_type='id' index='0' name='value' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sort'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='sql'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='value'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSFNanoSortDescriptor'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='attribute'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithAttribute:ascending:'>
<arg declared_type='NSString*' index='0' name='theAttribute' type='@'/>
<arg declared_type='BOOL' index='1' name='ascending' type='B'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isAscending'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='sortDescriptorWithAttribute:ascending:'>
<arg declared_type='NSString*' index='0' name='theAttribute' type='@'/>
<arg declared_type='BOOL' index='1' name='ascending' type='B'/>
<retval declared_type='NSFNanoSortDescriptor*' type='@'/>
</method>
</class>
<class name='NSFNanoStore'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_NSFDatatypeOfObject:'>
<arg declared_type='id' index='0' name='value' type='@'/>
<retval declared_type='NSFNanoDatatype' type='i'/>
</method>
<method selector='__storeDictionaries:forKeys:error:'>
<arg declared_type='NSArray*' index='0' name='someObjects' type='@'/>
<arg declared_type='NSArray*' index='1' name='someKeys' type='@'/>
<arg declared_type='NSError**' index='2' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_addObjectsFromArray:forceSave:error:'>
<arg declared_type='NSArray*' index='0' name='someObjects' type='@'/>
<arg declared_type='BOOL' index='1' name='forceSave' type='B'/>
<arg declared_type='NSError**' index='2' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_backupFileStoreToDirectoryAtPath:extension:compact:error:'>
<arg declared_type='NSString*' index='0' name='aPath' type='@'/>
<arg declared_type='NSString*' index='1' name='anExtension' type='@'/>
<arg declared_type='BOOL' index='2' name='flag' type='B'/>
<arg declared_type='NSError**' index='3' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_backupMemoryStoreToDirectoryAtPath:extension:compact:error:'>
<arg declared_type='NSString*' index='0' name='aPath' type='@'/>
<arg declared_type='NSString*' index='1' name='anExtension' type='@'/>
<arg declared_type='BOOL' index='2' name='flag' type='B'/>
<arg declared_type='NSError**' index='3' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_bindValue:forAttribute:parameterNumber:usingSQLite3Statement:'>
<arg declared_type='id' index='0' name='aValue' type='@'/>
<arg declared_type='NSString*' index='1' name='anAttribute' type='@'/>
<arg declared_type='NSInteger' index='2' name='aParamNumber' type='i' type64='q'/>
<arg declared_type='sqlite3_stmt*' index='3' name='aStatement' type='^{sqlite3_stmt=}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='_calendarDateToString:'>
<arg declared_type='NSDate*' index='0' name='aDate' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_checkNanoStoreIsReadyAndReturnError:'>
<arg declared_type='NSError**' index='0' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='_createAndOpenDebugDatabase'>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
<method class_method='true' selector='_defaultTestData'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='_executeSQL:'>
<arg declared_type='NSString*' index='0' name='theSQLStatement' type='@'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method selector='_executeSQLite3StepUsingSQLite3Statement:'>
<arg declared_type='sqlite3_stmt*' index='0' name='aStatement' type='^{sqlite3_stmt=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_flattenCollection:keyPath:keys:values:'>
<arg declared_type='id' index='0' name='someObject' type='@'/>
<arg declared_type='NSMutableArray**' index='1' name='aKeyPath' type='^@'/>
<arg declared_type='NSMutableArray**' index='2' name='someKeys' type='^@'/>
<arg declared_type='NSMutableArray**' index='3' name='someValues' type='^@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_flattenCollection:keys:values:'>
<arg declared_type='NSDictionary*' index='0' name='info' type='@'/>
<arg declared_type='NSMutableArray**' index='1' name='flattenedKeys' type='^@'/>
<arg declared_type='NSMutableArray**' index='2' name='flattenedValues' type='^@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_initializePreparedStatementsWithError:'>
<arg declared_type='NSError**' index='0' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_isOurTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_nestedDescriptionWithPrefixedSpace:'>
<arg declared_type='NSString*' index='0' name='prefixedSpace' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_prepareSQLite3Statement:theSQLStatement:'>
<arg declared_type='sqlite3_stmt**' index='0' name='aStatement' type='^^{sqlite3_stmt}'/>
<arg declared_type='NSString*' index='1' name='aSQLQuery' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_releasePreparedStatements'>
<retval declared_type='void' type='v'/>
</method>
<method selector='_setIsOurTransaction:'>
<arg declared_type='BOOL' index='0' name='value' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_setupCachingSchema'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_storeDictionary:forKey:forClassNamed:error:'>
<arg declared_type='NSDictionary*' index='0' name='someInfo' type='@'/>
<arg declared_type='NSString*' index='1' name='aKey' type='@'/>
<arg declared_type='NSString*' index='2' name='classType' type='@'/>
<arg declared_type='NSError**' index='3' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_stringFromValue:'>
<arg declared_type='id' index='0' name='aValue' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='addObject:error:'>
<arg declared_type='id' index='0' name='theObject' type='@'/>
<arg declared_type='NSError**' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='addObjectsFromArray:error:'>
<arg declared_type='NSArray*' index='0' name='theObjects' type='@'/>
<arg declared_type='NSError**' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allObjectClasses'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='bagWithName:'>
<arg declared_type='NSString*' index='0' name='theName' type='@'/>
<retval declared_type='NSFNanoBag*' type='@'/>
</method>
<method selector='bags'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='bagsContainingObjectWithKey:'>
<arg declared_type='NSString*' index='0' name='theKey' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='bagsWithKeysInArray:'>
<arg declared_type='NSArray*' index='0' name='theKeys' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='bagsWithName:'>
<arg declared_type='NSString*' index='0' name='theName' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='beginTransactionAndReturnError:'>
<arg declared_type='NSError**' index='0' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='clearIndexesAndReturnError:'>
<arg declared_type='NSError**' index='0' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='closeWithError:'>
<arg declared_type='NSError**' index='0' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='commitTransactionAndReturnError:'>
<arg declared_type='NSError**' index='0' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='compactStoreAndReturnError:'>
<arg declared_type='NSError**' index='0' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='countOfObjectsOfClassNamed:'>
<arg declared_type='NSString*' index='0' name='theClassName' type='@'/>
<retval declared_type='long long' type='q'/>
</method>
<method class_method='true' selector='createAndOpenStoreWithType:path:error:'>
<arg declared_type='NSFNanoStoreType' index='0' name='theType' type='i'/>
<arg declared_type='NSString*' index='1' name='thePath' type='@'/>
<arg declared_type='NSError**' index='2' name='outError' type='^@'/>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
<method class_method='true' selector='createStoreWithType:path:'>
<arg declared_type='NSFNanoStoreType' index='0' name='theType' type='i'/>
<arg declared_type='NSString*' index='1' name='thePath' type='@'/>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dictionaryDescription'>
<retval declared_type='NSFOrderedDictionary*' type='@'/>
</method>
<method selector='discardUnsavedChanges'>
<retval declared_type='void' type='v'/>
</method>
<method selector='filePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='hasUnsavedChanges'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initStoreWithType:path:'>
<arg declared_type='NSFNanoStoreType' index='0' name='theType' type='i'/>
<arg declared_type='NSString*' index='1' name='thePath' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isClosed'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='nanoEngineProcessingMode'>
<retval declared_type='NSFEngineProcessingMode' type='i'/>
</method>
<method selector='nanoStoreEngine'>
<retval declared_type='NSFNanoEngine*' type='@'/>
</method>
<method selector='objectsOfClassNamed:'>
<arg declared_type='NSString*' index='0' name='theClassName' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='objectsOfClassNamed:usingSortDescriptors:'>
<arg declared_type='NSString*' index='0' name='theClassName' type='@'/>
<arg declared_type='NSArray*' index='1' name='theSortDescriptors' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='objectsWithKeysInArray:'>
<arg declared_type='NSArray*' index='0' name='theKeys' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='openWithError:'>
<arg declared_type='NSError**' index='0' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rebuildIndexesAndReturnError:'>
<arg declared_type='NSError**' index='0' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeAllObjectsFromStoreAndReturnError:'>
<arg declared_type='NSError**' index='0' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeObject:error:'>
<arg declared_type='id' index='0' name='theObject' type='@'/>
<arg declared_type='NSError**' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeObjectsInArray:error:'>
<arg declared_type='NSArray*' index='0' name='theObjects' type='@'/>
<arg declared_type='NSError**' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeObjectsWithKeysInArray:error:'>
<arg declared_type='NSArray*' index='0' name='theKeys' type='@'/>
<arg declared_type='NSError**' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rollbackTransactionAndReturnError:'>
<arg declared_type='NSError**' index='0' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='saveInterval'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='saveStoreAndReturnError:'>
<arg declared_type='NSError**' index='0' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='saveStoreToDirectoryAtPath:compactDatabase:error:'>
<arg declared_type='NSString*' index='0' name='thePath' type='@'/>
<arg declared_type='BOOL' index='1' name='shouldCompact' type='B'/>
<arg declared_type='NSError**' index='2' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setNanoEngineProcessingMode:'>
<arg declared_type='NSFEngineProcessingMode' index='0' name='nanoEngineProcessingMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNanoStoreEngine:'>
<arg declared_type='NSFNanoEngine*' index='0' name='nanoStoreEngine' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSaveInterval:'>
<arg declared_type='NSUInteger' index='0' name='saveInterval' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSFOrderedDictionary'>
<method selector='insertObject:forKey:atIndex:'>
<arg declared_type='id' index='0' name='anObject' type='@'/>
<arg declared_type='id' index='1' name='aKey' type='@'/>
<arg declared_type='NSUInteger' index='2' name='anIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='keyAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='anIndex' type='I' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='reverseKeyEnumerator'>
<retval declared_type='NSEnumerator*' type='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='cancel'>
<retval declared_type='void' type='v'/>
</method>
<method selector='hudWasHidden:'>
<arg declared_type='MBProgressHUD*' index='0' name='hud' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='imageManager:shouldDownloadImageForURL:'>
<arg declared_type='SDWebImageManager*' index='0' name='imageManager' type='@'/>
<arg declared_type='NSURL*' index='1' name='imageURL' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='imageManager:transformDownloadedImage:withURL:'>
<arg declared_type='SDWebImageManager*' index='0' name='imageManager' type='@'/>
<arg declared_type='UIImage*' index='1' name='image' type='@'/>
<arg declared_type='NSURL*' index='2' name='imageURL' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='imagePrefetcher:didFinishWithTotalCount:skippedCount:'>
<arg declared_type='SDWebImagePrefetcher*' index='0' name='imagePrefetcher' type='@'/>
<arg declared_type='NSUInteger' index='1' name='totalCount' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='skippedCount' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='imagePrefetcher:didPrefetchURL:finishedCount:totalCount:'>
<arg declared_type='SDWebImagePrefetcher*' index='0' name='imagePrefetcher' type='@'/>
<arg declared_type='NSURL*' index='1' name='imageURL' type='@'/>
<arg declared_type='NSUInteger' index='2' name='finishedCount' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='3' name='totalCount' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initNanoObjectFromDictionaryRepresentation:forKey:store:'>
<arg declared_type='NSDictionary*' index='0' name='theDictionary' type='@'/>
<arg declared_type='NSString*' index='1' name='aKey' type='@'/>
<arg declared_type='NSFNanoStore*' index='2' name='theStore' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='nanoObjectDictionaryRepresentation'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='nanoObjectKey'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='rootObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='sideMenu:didHideMenuViewController:'>
<arg declared_type='RESideMenu*' index='0' name='sideMenu' type='@'/>
<arg declared_type='UIViewController*' index='1' name='menuViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sideMenu:didRecognizePanGesture:'>
<arg declared_type='RESideMenu*' index='0' name='sideMenu' type='@'/>
<arg declared_type='UIPanGestureRecognizer*' index='1' name='recognizer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sideMenu:didShowMenuViewController:'>
<arg declared_type='RESideMenu*' index='0' name='sideMenu' type='@'/>
<arg declared_type='UIViewController*' index='1' name='menuViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sideMenu:willHideMenuViewController:'>
<arg declared_type='RESideMenu*' index='0' name='sideMenu' type='@'/>
<arg declared_type='UIViewController*' index='1' name='menuViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sideMenu:willShowMenuViewController:'>
<arg declared_type='RESideMenu*' index='0' name='sideMenu' type='@'/>
<arg declared_type='UIViewController*' index='1' name='menuViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSString'>
<method selector='stringByTruncatingToSize:withFont:addQuotes:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='UIFont*' index='1' name='font' type='@'/>
<arg declared_type='BOOL' index='2' name='addQuotes' type='B'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='RESideMenu'>
<method selector='animationDuration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='backgroundImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='contentViewController'>
<retval declared_type='UIViewController*' type='@'/>
</method>
<method selector='contentViewInLandscapeOffsetCenterX'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='contentViewInLandscapeOffsetCenterY'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='contentViewInPortraitOffsetCenterX'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='contentViewInPortraitOffsetCenterY'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='contentViewScaleValue'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='hideMenuViewController'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithContentViewController:menuViewController:'>
<arg declared_type='UIViewController*' index='0' name='contentViewController' type='@'/>
<arg declared_type='UIViewController*' index='1' name='menuViewController' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='menuViewController'>
<retval declared_type='UIViewController*' type='@'/>
</method>
<method selector='panGestureEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='parallaxContentMaximumRelativeValue'>
<retval declared_type='id' type='@'/>
</method>
<method selector='parallaxContentMinimumRelativeValue'>
<retval declared_type='id' type='@'/>
</method>
<method selector='parallaxEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='parallaxMenuMaximumRelativeValue'>
<retval declared_type='id' type='@'/>
</method>
<method selector='parallaxMenuMinimumRelativeValue'>
<retval declared_type='id' type='@'/>
</method>
<method selector='presentMenuViewController'>
<retval declared_type='void' type='v'/>
</method>
<method selector='scaleBackgroundImageView'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scaleContentView'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAnimationDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='animationDuration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImage:'>
<arg declared_type='UIImage*' index='0' name='backgroundImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentViewController:'>
<arg declared_type='UIViewController*' index='0' name='contentViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentViewInLandscapeOffsetCenterX:'>
<arg declared_type='CGFloat' index='0' name='contentViewInLandscapeOffsetCenterX' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentViewInLandscapeOffsetCenterY:'>
<arg declared_type='CGFloat' index='0' name='contentViewInLandscapeOffsetCenterY' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentViewInPortraitOffsetCenterX:'>
<arg declared_type='CGFloat' index='0' name='contentViewInPortraitOffsetCenterX' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentViewInPortraitOffsetCenterY:'>
<arg declared_type='CGFloat' index='0' name='contentViewInPortraitOffsetCenterY' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentViewScaleValue:'>
<arg declared_type='CGFloat' index='0' name='contentViewScaleValue' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMenuViewController:'>
<arg declared_type='UIViewController*' index='0' name='menuViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPanGestureEnabled:'>
<arg declared_type='BOOL' index='0' name='panGestureEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParallaxContentMaximumRelativeValue:'>
<arg declared_type='id' index='0' name='parallaxContentMaximumRelativeValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParallaxContentMinimumRelativeValue:'>
<arg declared_type='id' index='0' name='parallaxContentMinimumRelativeValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParallaxEnabled:'>
<arg declared_type='BOOL' index='0' name='parallaxEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParallaxMenuMaximumRelativeValue:'>
<arg declared_type='id' index='0' name='parallaxMenuMaximumRelativeValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParallaxMenuMinimumRelativeValue:'>
<arg declared_type='id' index='0' name='parallaxMenuMinimumRelativeValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScaleBackgroundImageView:'>
<arg declared_type='BOOL' index='0' name='scaleBackgroundImageView' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScaleContentView:'>
<arg declared_type='BOOL' index='0' name='scaleContentView' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SDImageCache'>
<method selector='addReadOnlyCachePath:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='calculateSizeWithCompletionBlock:'>
<arg declared_type='void (^)(NSUInteger, unsigned long long)' function_pointer='true' index='0' name='completionBlock' type='@?'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='unsigned long long' type='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='cleanDisk'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearDisk'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearMemory'>
<retval declared_type='void' type='v'/>
</method>
<method selector='diskImageExistsWithKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='getDiskCount'>
<retval declared_type='int' type='i'/>
</method>
<method selector='getSize'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='imageFromDiskCacheForKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='imageFromMemoryCacheForKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='initWithNamespace:'>
<arg declared_type='NSString*' index='0' name='ns' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='maxCacheAge'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='maxCacheSize'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='maxMemoryCost'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='queryDiskCacheForKey:done:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<arg declared_type='void (^)(UIImage *, SDImageCacheType)' function_pointer='true' index='1' name='doneBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='SDImageCacheType' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSOperation*' type='@'/>
</method>
<method selector='removeImageForKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeImageForKey:fromDisk:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<arg declared_type='BOOL' index='1' name='fromDisk' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxCacheAge:'>
<arg declared_type='NSInteger' index='0' name='maxCacheAge' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxCacheSize:'>
<arg declared_type='unsigned long long' index='0' name='maxCacheSize' type='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxMemoryCost:'>
<arg declared_type='NSUInteger' index='0' name='maxMemoryCost' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedImageCache'>
<retval declared_type='SDImageCache*' type='@'/>
</method>
<method selector='storeImage:forKey:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='storeImage:forKey:toDisk:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<arg declared_type='BOOL' index='2' name='toDisk' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='storeImage:recalculateFromImage:imageData:forKey:toDisk:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='BOOL' index='1' name='recalculate' type='B'/>
<arg declared_type='NSData*' index='2' name='imageData' type='@'/>
<arg declared_type='NSString*' index='3' name='key' type='@'/>
<arg declared_type='BOOL' index='4' name='toDisk' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SDSegmentView'>
<method selector='imageSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='itemFont'>
<retval declared_type='UIFont*' type='@'/>
</method>
<method selector='setImageSize:'>
<arg declared_type='CGSize' index='0' name='imageSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItemFont:'>
<arg declared_type='UIFont*' index='0' name='itemFont' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SDSegmentedControl'>
<method selector='animationDuration'>
<retval declared_type='CFTimeInterval' type='d'/>
</method>
<method selector='arrowHeightFactor'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='arrowSize'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='backgroundColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='borderColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='interItemSpace'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='scrollView'>
<retval declared_type='UIScrollView*' type='@'/>
</method>
<method selector='setAnimationDuration:'>
<arg declared_type='CFTimeInterval' index='0' name='animationDuration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setArrowHeightFactor:'>
<arg declared_type='CGFloat' index='0' name='arrowHeightFactor' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setArrowSize:'>
<arg declared_type='CGFloat' index='0' name='arrowSize' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='UIColor*' index='0' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBorderColor:'>
<arg declared_type='UIColor*' index='0' name='borderColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInterItemSpace:'>
<arg declared_type='CGFloat' index='0' name='interItemSpace' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScrollView:'>
<arg declared_type='UIScrollView*' index='0' name='scrollView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStainEdgeInsets:'>
<arg declared_type='UIEdgeInsets' index='0' name='stainEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stainEdgeInsets'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
</class>
<class name='SDStainView'>
<method selector='cornerRadius'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='edgeInsets'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
</method>
<method selector='innerStrokeColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='innerStrokeLineWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='setCornerRadius:'>
<arg declared_type='CGFloat' index='0' name='cornerRadius' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEdgeInsets:'>
<arg declared_type='UIEdgeInsets' index='0' name='edgeInsets' type='{UIEdgeInsets=ffff}' type64='{UIEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInnerStrokeColor:'>
<arg declared_type='UIColor*' index='0' name='innerStrokeColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInnerStrokeLineWidth:'>
<arg declared_type='CGFloat' index='0' name='innerStrokeLineWidth' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadowBlur:'>
<arg declared_type='CGFloat' index='0' name='shadowBlur' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadowColor:'>
<arg declared_type='UIColor*' index='0' name='shadowColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadowOffset:'>
<arg declared_type='CGSize' index='0' name='shadowOffset' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shadowBlur'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='shadowColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='shadowOffset'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
</class>
<class name='SDWebImageDownloader'>
<method selector='currentDownloadCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='downloadImageWithURL:options:progress:completed:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='SDWebImageDownloaderOptions' index='1' name='options' type='i'/>
<arg declared_type='SDWebImageDownloaderProgressBlock' function_pointer='true' index='2' name='progressBlock' type='@?'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='SDWebImageDownloaderCompletedBlock' function_pointer='true' index='3' name='completedBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='NSData*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='downloadTimeout'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='executionOrder'>
<retval declared_type='SDWebImageDownloaderExecutionOrder' type='i'/>
</method>
<method selector='headersFilter'>
<retval declared_type='NSDictionary *(^)(NSURL *, NSDictionary *)' function_pointer='true' type='@?'>
<arg declared_type='NSURL*' type='@'/>
<arg declared_type='NSDictionary*' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</retval>
</method>
<method selector='maxConcurrentDownloads'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setDownloadTimeout:'>
<arg declared_type='NSTimeInterval' index='0' name='downloadTimeout' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExecutionOrder:'>
<arg declared_type='SDWebImageDownloaderExecutionOrder' index='0' name='executionOrder' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeadersFilter:'>
<arg declared_type='NSDictionary *(^)(NSURL *, NSDictionary *)' function_pointer='true' index='0' name='headersFilter' type='@?'>
<arg declared_type='NSURL*' type='@'/>
<arg declared_type='NSDictionary*' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxConcurrentDownloads:'>
<arg declared_type='NSInteger' index='0' name='maxConcurrentDownloads' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:forHTTPHeaderField:'>
<arg declared_type='NSString*' index='0' name='value' type='@'/>
<arg declared_type='NSString*' index='1' name='field' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedDownloader'>
<retval declared_type='SDWebImageDownloader*' type='@'/>
</method>
<method selector='valueForHTTPHeaderField:'>
<arg declared_type='NSString*' index='0' name='field' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='SDWebImageDownloaderOperation'>
<method selector='initWithRequest:options:progress:completed:cancelled:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='SDWebImageDownloaderOptions' index='1' name='options' type='i'/>
<arg declared_type='SDWebImageDownloaderProgressBlock' function_pointer='true' index='2' name='progressBlock' type='@?'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='SDWebImageDownloaderCompletedBlock' function_pointer='true' index='3' name='completedBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='NSData*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)()' function_pointer='true' index='4' name='cancelBlock' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='options'>
<retval declared_type='SDWebImageDownloaderOptions' type='i'/>
</method>
<method selector='request'>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method selector='setRequest:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SDWebImageManager'>
<method selector='cacheKeyFilter'>
<retval declared_type='NSString *(^)(NSURL *)' function_pointer='true' type='@?'>
<arg declared_type='NSURL*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</retval>
</method>
<method selector='cancelAll'>
<retval declared_type='void' type='v'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='diskImageExistsForURL:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='downloadWithURL:options:progress:completed:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='SDWebImageOptions' index='1' name='options' type='i'/>
<arg declared_type='SDWebImageDownloaderProgressBlock' function_pointer='true' index='2' name='progressBlock' type='@?'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='SDWebImageCompletedWithFinishedBlock' function_pointer='true' index='3' name='completedBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='SDImageCacheType' type='i'/>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='imageCache'>
<retval declared_type='SDImageCache*' type='@'/>
</method>
<method selector='imageDownloader'>
<retval declared_type='SDWebImageDownloader*' type='@'/>
</method>
<method selector='isRunning'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setCacheKeyFilter:'>
<arg declared_type='NSString *(^)(NSURL *)' function_pointer='true' index='0' name='cacheKeyFilter' type='@?'>
<arg declared_type='NSURL*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageCache:'>
<arg declared_type='SDImageCache*' index='0' name='imageCache' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageDownloader:'>
<arg declared_type='SDWebImageDownloader*' index='0' name='imageDownloader' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedManager'>
<retval declared_type='SDWebImageManager*' type='@'/>
</method>
</class>
<class name='SDWebImagePrefetcher'>
<method selector='cancelPrefetching'>
<retval declared_type='void' type='v'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='maxConcurrentDownloads'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='options'>
<retval declared_type='SDWebImageOptions' type='i'/>
</method>
<method selector='prefetchURLs:'>
<arg declared_type='NSArray*' index='0' name='urls' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='prefetchURLs:completed:'>
<arg declared_type='NSArray*' index='0' name='urls' type='@'/>
<arg declared_type='void (^)(NSUInteger, NSUInteger)' function_pointer='true' index='1' name='completionBlock' type='@?'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxConcurrentDownloads:'>
<arg declared_type='NSUInteger' index='0' name='maxConcurrentDownloads' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOptions:'>
<arg declared_type='SDWebImageOptions' index='0' name='options' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedImagePrefetcher'>
<retval declared_type='SDWebImagePrefetcher*' type='@'/>
</method>
</class>
<class name='SVInfiniteScrollingView'>
<method selector='activityIndicatorViewStyle'>
<retval declared_type='UIActivityIndicatorViewStyle' type='i' type64='q'/>
</method>
<method selector='enabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setActivityIndicatorViewStyle:'>
<arg declared_type='UIActivityIndicatorViewStyle' index='0' name='activityIndicatorViewStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCustomView:forState:'>
<arg declared_type='UIView*' index='0' name='view' type='@'/>
<arg declared_type='SVInfiniteScrollingState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startAnimating'>
<retval declared_type='void' type='v'/>
</method>
<method selector='state'>
<retval declared_type='SVInfiniteScrollingState' type='I' type64='Q'/>
</method>
<method selector='stopAnimating'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SVPullToRefreshView'>
<method selector='activityIndicatorViewStyle'>
<retval declared_type='UIActivityIndicatorViewStyle' type='i' type64='q'/>
</method>
<method selector='arrowColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='dateFormatter'>
<retval declared_type='NSDateFormatter*' type='@'/>
</method>
<method selector='dateLabel'>
<retval declared_type='UILabel*' type='@'/>
</method>
<method selector='lastUpdatedDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='setActivityIndicatorViewStyle:'>
<arg declared_type='UIActivityIndicatorViewStyle' index='0' name='activityIndicatorViewStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setArrowColor:'>
<arg declared_type='UIColor*' index='0' name='arrowColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCustomView:forState:'>
<arg declared_type='UIView*' index='0' name='view' type='@'/>
<arg declared_type='SVPullToRefreshState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDateFormatter:'>
<arg declared_type='NSDateFormatter*' index='0' name='dateFormatter' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDateLabel:'>
<arg declared_type='UILabel*' index='0' name='dateLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLastUpdatedDate:'>
<arg declared_type='NSDate*' index='0' name='lastUpdatedDate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubtitle:forState:'>
<arg declared_type='NSString*' index='0' name='subtitle' type='@'/>
<arg declared_type='SVPullToRefreshState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubtitleLabel:'>
<arg declared_type='UILabel*' index='0' name='subtitleLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextColor:'>
<arg declared_type='UIColor*' index='0' name='textColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:forState:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<arg declared_type='SVPullToRefreshState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleLabel:'>
<arg declared_type='UILabel*' index='0' name='titleLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startAnimating'>
<retval declared_type='void' type='v'/>
</method>
<method selector='state'>
<retval declared_type='SVPullToRefreshState' type='I' type64='Q'/>
</method>
<method selector='stopAnimating'>
<retval declared_type='void' type='v'/>
</method>
<method selector='subtitleLabel'>
<retval declared_type='UILabel*' type='@'/>
</method>
<method selector='textColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='titleLabel'>
<retval declared_type='UILabel*' type='@'/>
</method>
<method selector='triggerRefresh'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIButton'>
<method selector='cancelCurrentImageLoad'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImageWithURL:forState:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImageWithURL:forState:completed:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<arg declared_type='SDWebImageCompletedBlock' function_pointer='true' index='2' name='completedBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='SDImageCacheType' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImageWithURL:forState:placeholderImage:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<arg declared_type='UIImage*' index='2' name='placeholder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImageWithURL:forState:placeholderImage:completed:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<arg declared_type='UIImage*' index='2' name='placeholder' type='@'/>
<arg declared_type='SDWebImageCompletedBlock' function_pointer='true' index='3' name='completedBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='SDImageCacheType' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImageWithURL:forState:placeholderImage:options:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<arg declared_type='UIImage*' index='2' name='placeholder' type='@'/>
<arg declared_type='SDWebImageOptions' index='3' name='options' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImageWithURL:forState:placeholderImage:options:completed:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<arg declared_type='UIImage*' index='2' name='placeholder' type='@'/>
<arg declared_type='SDWebImageOptions' index='3' name='options' type='i'/>
<arg declared_type='SDWebImageCompletedBlock' function_pointer='true' index='4' name='completedBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='SDImageCacheType' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:forState:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:forState:completed:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<arg declared_type='SDWebImageCompletedBlock' function_pointer='true' index='2' name='completedBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='SDImageCacheType' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:forState:placeholderImage:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<arg declared_type='UIImage*' index='2' name='placeholder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:forState:placeholderImage:completed:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<arg declared_type='UIImage*' index='2' name='placeholder' type='@'/>
<arg declared_type='SDWebImageCompletedBlock' function_pointer='true' index='3' name='completedBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='SDImageCacheType' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:forState:placeholderImage:options:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<arg declared_type='UIImage*' index='2' name='placeholder' type='@'/>
<arg declared_type='SDWebImageOptions' index='3' name='options' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:forState:placeholderImage:options:completed:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I' type64='Q'/>
<arg declared_type='UIImage*' index='2' name='placeholder' type='@'/>
<arg declared_type='SDWebImageOptions' index='3' name='options' type='i'/>
<arg declared_type='SDWebImageCompletedBlock' function_pointer='true' index='4' name='completedBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='SDImageCacheType' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIFont'>
<method class_method='true' selector='boldSystemFontThatFitsSize:maxFontSize:minSize:text:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='int' index='1' name='max' type='i'/>
<arg declared_type='int' index='2' name='min' type='i'/>
<arg declared_type='NSString*' index='3' name='text' type='@'/>
<retval declared_type='UIFont*' type='@'/>
</method>
</class>
<class name='UIImage'>
<method class_method='true' selector='decodedImageWithImage:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method class_method='true' selector='sd_animatedGIFNamed:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method class_method='true' selector='sd_animatedGIFWithData:'>
<arg declared_type='NSData*' index='0' name='data' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='sd_animatedImageByScalingAndCroppingToSize:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method class_method='true' selector='sd_imageWithData:'>
<arg declared_type='NSData*' index='0' name='data' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
</class>
<class name='UIImageView'>
<method selector='cancelCurrentArrayLoad'>
<retval declared_type='void' type='v'/>
</method>
<method selector='cancelCurrentImageLoad'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnimationImagesWithURLs:'>
<arg declared_type='NSArray*' index='0' name='arrayOfURLs' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:completed:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='SDWebImageCompletedBlock' function_pointer='true' index='1' name='completedBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='SDImageCacheType' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholderImage:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIImage*' index='1' name='placeholder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholderImage:completed:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIImage*' index='1' name='placeholder' type='@'/>
<arg declared_type='SDWebImageCompletedBlock' function_pointer='true' index='2' name='completedBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='SDImageCacheType' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholderImage:options:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIImage*' index='1' name='placeholder' type='@'/>
<arg declared_type='SDWebImageOptions' index='2' name='options' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholderImage:options:completed:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIImage*' index='1' name='placeholder' type='@'/>
<arg declared_type='SDWebImageOptions' index='2' name='options' type='i'/>
<arg declared_type='SDWebImageCompletedBlock' function_pointer='true' index='3' name='completedBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='SDImageCacheType' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholderImage:options:progress:completed:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIImage*' index='1' name='placeholder' type='@'/>
<arg declared_type='SDWebImageOptions' index='2' name='options' type='i'/>
<arg declared_type='SDWebImageDownloaderProgressBlock' function_pointer='true' index='3' name='progressBlock' type='@?'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='SDWebImageCompletedBlock' function_pointer='true' index='4' name='completedBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='SDImageCacheType' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIScrollView'>
<method selector='addInfiniteScrollingWithActionHandler:'>
<arg declared_type='void (^)(void)' function_pointer='true' index='0' name='actionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='addPullToRefreshWithActionHandler:'>
<arg declared_type='void (^)(void)' function_pointer='true' index='0' name='actionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='infiniteScrollingView'>
<retval declared_type='SVInfiniteScrollingView*' type='@'/>
</method>
<method selector='pullToRefreshView'>
<retval declared_type='SVPullToRefreshView*' type='@'/>
</method>
<method selector='setInfiniteScrollingView:'>
<arg declared_type='SVInfiniteScrollingView*' index='0' name='infiniteScrollingView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPullToRefreshView:'>
<arg declared_type='SVPullToRefreshView*' index='0' name='pullToRefreshView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsInfiniteScrolling:'>
<arg declared_type='BOOL' index='0' name='showsInfiniteScrolling' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsPullToRefresh:'>
<arg declared_type='BOOL' index='0' name='showsPullToRefresh' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showsInfiniteScrolling'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showsPullToRefresh'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='triggerInfiniteScrolling'>
<retval declared_type='void' type='v'/>
</method>
<method selector='triggerPullToRefresh'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIView'>
<method selector='centerViewsVerticallyWithin:'>
<arg declared_type='NSArray*' index='0' name='views' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resignFirstRespondersForSubviews'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIViewController'>
<method selector='re_displayController:frame:'>
<arg declared_type='UIViewController*' index='0' name='controller' type='@'/>
<arg declared_type='CGRect' index='1' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='re_hideController:'>
<arg declared_type='UIViewController*' index='0' name='controller' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSideMenuViewController:'>
<arg declared_type='RESideMenu*' index='0' name='sideMenuViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sideMenuViewController'>
<retval declared_type='RESideMenu*' type='@'/>
</method>
</class>
<informal_protocol name='MBProgressHUDDelegate'>
<method selector='hudWasHidden:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='MBProgressHUD*' index='0' name='hud' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSFNanoObjectProtocol'>
<method selector='initNanoObjectFromDictionaryRepresentation:forKey:store:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='NSDictionary*' index='0' name='theDictionary' type='@'/>
<arg declared_type='NSString*' index='1' name='aKey' type='@'/>
<arg declared_type='NSFNanoStore*' index='2' name='theStore' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='nanoObjectDictionaryRepresentation' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='nanoObjectKey' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='rootObject' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='RESideMenuDelegate'>
<method selector='sideMenu:didHideMenuViewController:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='RESideMenu*' index='0' name='sideMenu' type='@'/>
<arg declared_type='UIViewController*' index='1' name='menuViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sideMenu:didRecognizePanGesture:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='RESideMenu*' index='0' name='sideMenu' type='@'/>
<arg declared_type='UIPanGestureRecognizer*' index='1' name='recognizer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sideMenu:didShowMenuViewController:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='RESideMenu*' index='0' name='sideMenu' type='@'/>
<arg declared_type='UIViewController*' index='1' name='menuViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sideMenu:willHideMenuViewController:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='RESideMenu*' index='0' name='sideMenu' type='@'/>
<arg declared_type='UIViewController*' index='1' name='menuViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sideMenu:willShowMenuViewController:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='RESideMenu*' index='0' name='sideMenu' type='@'/>
<arg declared_type='UIViewController*' index='1' name='menuViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='SDWebImageManagerDelegate'>
<method selector='imageManager:shouldDownloadImageForURL:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='SDWebImageManager*' index='0' name='imageManager' type='@'/>
<arg declared_type='NSURL*' index='1' name='imageURL' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='imageManager:transformDownloadedImage:withURL:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='SDWebImageManager*' index='0' name='imageManager' type='@'/>
<arg declared_type='UIImage*' index='1' name='image' type='@'/>
<arg declared_type='NSURL*' index='2' name='imageURL' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='SDWebImageOperation'>
<method selector='cancel' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='SDWebImagePrefetcherDelegate'>
<method selector='imagePrefetcher:didFinishWithTotalCount:skippedCount:' type='v20@0:4@8I12I16' type64='v40@0:8@16Q24Q32'>
<arg declared_type='SDWebImagePrefetcher*' index='0' name='imagePrefetcher' type='@'/>
<arg declared_type='NSUInteger' index='1' name='totalCount' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='skippedCount' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='imagePrefetcher:didPrefetchURL:finishedCount:totalCount:' type='v24@0:4@8@12I16I20' type64='v48@0:8@16@24Q32Q40'>
<arg declared_type='SDWebImagePrefetcher*' index='0' name='imagePrefetcher' type='@'/>
<arg declared_type='NSURL*' index='1' name='imageURL' type='@'/>
<arg declared_type='NSUInteger' index='2' name='finishedCount' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='3' name='totalCount' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
</signatures>
